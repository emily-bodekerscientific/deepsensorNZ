# ------------------------------------------
# VARIABLE
# ------------------------------------------

# Variable to be downscaled (temperature, precipitation, 
# surface_pressure, 10m_u_component_of_wind, 10m_v_component_of_wind, humidity)
variable:
  arg: 10m_v_component_of_wind
  type: str

# Whether to use ERA5 or WRF
base:
  arg: era5
  type: str

# Model name, if 'default' it will be the time
model_name:
  arg: era5_test
  type: str

# ------------------------------------------
# TRAINING HYPERPARAMETERS
# ------------------------------------------

# Number of epochs
n_epochs:
  arg: 100
  type: int
  
# Learning rate
lr:
  arg: 1e-5
  type: float

# Pretrained model path
pretrained_model:
  arg: None
  type: str_or_none

# Use new processor or pretrained model's 
pretrained_processor:
  arg: False
  type: bool

# Weight decay
weight_decay:
  arg: 0
  type: float
  
# Batch training
batch:
  arg: False  
  type: bool

# Batch size for training, only used if batch=True
batch_size:
  arg: 4  
  type: int
  
# ------------------------------------------
# TRAINING PERIOD
# ------------------------------------------

# Training start year
start_year:
  # arg: 2000
  arg: 1995
  type: int

# Training end year (inclusive)
end_year:
  # arg: 2011
  arg: 2015
  # arg: 2003
  type: int

# Training years are between start_year and end_year, and are separated by training_years_step
# E.g. start_year=2000, end_year=2011, training_years_step=3, then training years are [2000, 2003, 2006, 2009]
# If training_years_step is 1, then all years between start_year and end_year are used
training_years_step:
  arg: 3
  type: int
  
# Use daily data
use_daily_data:
  arg: False  
  type: bool
  
# Take a subset of the data, e.g., dates[::time_intervals].
# Applies to both training and validation dates
time_intervals:
  arg: 5
  type: int
  
# ------------------------------------------
# VALIDATION PERIOD
# ------------------------------------------

# Validation start year
val_start_year:
  arg: 2014  
  # arg: 2002
  type: int

# Validation end year (inclusive)
val_end_year:
  arg: 2014
  # arg: 2002
  type: int

# Validation years are between val_start_year and val_end_year, and are separated by val_years_step
val_years_step:
  arg: 1
  type: int
  
# ------------------------------------------
# MODEL RESOLUTION
# ------------------------------------------

# Coarsen factor for high resolution topography
topography_highres_coarsen_factor:
  arg: 5
  type: int

# Coarsen factor for low resolution topography
topography_lowres_coarsen_factor:
  arg: 10
  type: int

# Coarsen factor for ERA5 data
era5_coarsen_factor:
  arg: 1  
  type: int
  
# ------------------------------------------
# INPUT VARIABLES
# ------------------------------------------

# Include time of year
include_time_of_year:
  arg: True  
  type: bool

# Include landmask
include_landmask:
  arg: True  
  type: bool

# Context variables
context_variables: 
  arg: ['temperature',
        'precipitation',
        '10m_u_component_of_wind',
        '10m_v_component_of_wind',
        'surface_pressure',
        'surface_solar_radiation_downwards',
        ]
  type: list
  
# Station as context
# If True, all stations are included as context variables
# If False, no stations are included as context variables
# If float, the percentage of stations to include as context variables
# If random, a random number of stations are included as context variables
station_as_context:
  arg: random
  type: bool_or_float_or_str
  
  
# ------------------------------------------
# SPATIAL DETAILS
# ------------------------------------------

# Area 
# Select area of map, options specified in: PLOT_EXTENT in nzdownscale.dataprocess.config.py. 
# PLOT_EXTENT['all'] (all of NZ) is used as default
area:
  arg: None  
  type: str_or_none

# Remove stations
# List of station names to remove from the dataset
remove_stations:
  arg: ["TAUPO AERO AWS",
    "CHRISTCHURCH AERO",
    "KAITAIA AERO",
    "MT COOK EWS",
    "AUCKLAND AERO",
    "ALEXANDRA AWS",
    "TOLAGA BAY WXT AWS",
    "WELLINGTON AERO",
    "BLENHEIM AERO",
    "DUNEDIN AERO AWS",
    ]  
  type: list

# ------------------------------------------
# NEURAL PROCESS PARAMETERS
# ------------------------------------------

# Channels for UNet
unet_channels:
  arg: None  
  type: int_or_none

# Likelihood
likelihood:
  arg: None  
  type: str_or_none

# Internal density
internal_density:
  arg: 250
  type: int

# Auto set internal density
auto_set_internal_density:
  arg: False  
  type: bool






